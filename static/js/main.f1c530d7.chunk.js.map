{"version":3,"sources":["serviceWorker.js","redux/constants.js","redux/reducers.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Loader.js","components/Scroll.js","components/Header.js","components/ErrorBoundary.js","api/api.js","containers/App.js","redux/actions.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","initialStateSearch","searchField","initialStateHomes","property","isPending","Card","features","id","name","area","postcode","type","desc","price","image","className","src","alt","href","target","CardList","map","house","key","SearchBox","searchChange","onChange","placeholder","Loader","Scroll","props","children","memo","component","status","Date","toLocaleTimeString","ErrorBoundary","hasError","info","this","setState","Component","apiCall","url","dispatch","fetch","resp","json","data","payload","App","onFetchHomes","onSearchChange","filterPropertyType","filter","home","toLowerCase","includes","Fragment","connect","searchHomes","getHomes","event","value","logger","createLogger","rootReducer","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleWare","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"yPAYMA,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,iHAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,WAO5BW,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,MC9F1D,ICKDC,EAAqB,CAC1BC,YAAY,IAgBPC,EAAoB,CACzBC,SAAS,GACTC,WAAW,EACXL,MAAM,I,4BCWQM,EAlCF,SAAC,GAAiE,IAAhEC,EAA+D,EAA/DA,SAASC,EAAsD,EAAtDA,GAAGC,EAAmD,EAAnDA,KAAKC,EAA8C,EAA9CA,KAAMC,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,MAElE,OACE,yBAAKC,UAAU,QACd,yBAAKA,UAAU,kCACd,yBAAKA,UAAU,kBACf,yBAAKA,UAAU,aAAaC,IAAKF,EAAOG,IAAG,mBAAcV,EAAd,aAAqBC,KAC/D,wBAAIO,UAAU,eAAeP,GAC7B,uBAAGO,UAAU,kBAAb,UAAkCN,EAAlC,aAA2CC,IAC3C,uBAAGK,UAAU,eAAeJ,GAC5B,uBAAGI,UAAU,gBACZ,0BAAMA,UAAU,0BAAhB,QACCF,IAIH,yBAAKE,UAAU,iCACd,yBAAKA,UAAU,kBACd,uBAAGA,UAAU,sBAAsBH,GAEnC,wBAAIG,UAAU,eACb,wBAAIA,UAAU,qCAAd,UAAsDT,EAAQ,SAA9D,cACA,wBAAIS,UAAU,sCAAd,UAAuDT,EAAQ,cAA/D,wBACA,wBAAIS,UAAU,wCAAd,UAAyDT,EAAQ,gBAAjE,yBACA,wBAAIS,UAAU,yCAAd,mBAAmET,EAAQ,WAE5E,uBAAGS,UAAU,mBAAmBG,KAAK,KAAKC,OAAO,UAAjD,aCAQC,EA1BE,SAAC,GAAkB,IAAhBjB,EAAe,EAAfA,SAEnB,OACC,yBAAKY,UAAU,kBAEbZ,EAASkB,KAAI,SAAAC,GACZ,OACC,kBAAC,EAAD,CACCC,IAAMD,EAAK,GACXhB,SAAWgB,EAAK,eAChBf,GAAKe,EAAK,GACVd,KAAOc,EAAK,cACZb,KAAOa,EAAK,WACZZ,SAAWY,EAAK,eAChBX,KAAOW,EAAK,WACZV,KAAOU,EAAK,WACZT,MAAQS,EAAK,YACbR,MAAQQ,EAAK,iBCXLE,EARG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACpB,OACC,yBAAKV,UAAU,UACd,2BAAOW,SAAWD,EAAeV,UAAU,mBAAmBJ,KAAK,SAASgB,YAAY,+BCe5EC,EAjBA,WACd,OACC,yBAAKb,UAAU,UACd,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,2CACf,yBAAKA,UAAU,2CACf,yBAAKA,UAAU,2CACf,yBAAKA,UAAU,2CACf,yBAAKA,UAAU,8CCULc,EAVA,SAACC,GAGf,OACC,yBAAKf,UAAU,UACbe,EAAMC,WCTKC,kBALA,WAEb,OADAtC,QAAQC,IAAI,CAAEsC,UAAW,SAAUC,QAAQ,IAAIC,MAAOC,uBAC/C,oCAAE,wBAAIrB,UAAU,mBAAd,qBCqBIsB,E,kDAtBd,WAAYP,GAAQ,IAAD,8BAClB,cAAMA,IACDtC,MAAQ,CACZ8C,UAAU,GAHO,E,8DAQDvC,EAAMwC,GACvBC,KAAKC,SAAS,CAACH,UAAS,M,+BAKxB,OADqBE,KAAKhD,MAAlB8C,SAEA,wBAAIvB,UAAU,gBAAd,+BAGDyB,KAAKV,MAAMC,a,GAnBQW,aCwBbC,EApBE,SAACC,GAAD,OAAS,SAAAC,GACzBA,EAAS,CACRlC,KTHmC,0BSKnCmC,MAAMF,GACJ1D,MAAK,SAAA6D,GAAI,OAAGA,EAAKC,UACjB9D,MAAK,SAAA+D,GACNJ,EAAS,CACPlC,KTRgC,wBSShCuC,QAAQD,OAEPnD,OAAM,SAAAC,GACT8C,EAAS,CACPlC,KTZ+B,uBSa/BuC,QAAQnD,SCOPoD,E,mLAIJC,EADyBZ,KAAKV,MAAtBsB,kB,+BAIC,IAAD,EACqDZ,KAAKV,MAA1D7B,EADA,EACAA,YAAaoD,EADb,EACaA,eAAgBlD,EAD7B,EAC6BA,SAAUC,EADvC,EACuCA,UAEzCkD,EAAqBnD,EAASoD,QAAO,SAAAC,GAC1C,OAAOA,EAAI,WAAeC,cAAcC,SAASzD,EAAYwD,kBAQ9D,OAAQrD,EACR,kBAAC,EAAD,MAEC,kBAAC,IAAMuD,SAAP,KACE,kBAAC,EAAD,MACC,kBAAC,EAAD,CAAWlC,aAAe4B,IAC1B,kBAAC,EAAD,KACC,kBAAC,EAAD,KACC,kBAAC,EAAD,CAAUlD,SAAWmD,W,GA3BXZ,aAoCHkB,eApDS,SAAApE,GAAS,IACzBqE,EAAyBrE,EAAzBqE,YAAaC,EAAYtE,EAAZsE,SACpB,MAAO,CACN7D,YAAa4D,EAAY5D,YACzBE,SAAU2D,EAAS3D,SACnBC,UAAW0D,EAAS1D,UACpBL,MAAO+D,EAAS/D,UAGS,SAAC8C,GAC3B,MAAO,CACNQ,eAAgB,SAACU,GAAD,OAAWlB,ECnBY,CACxClC,KXFkC,sBWGlCuC,QDiBoDa,EAAM5C,OAAO6C,SAChEZ,aAAc,kBAAMP,GCfU,SAACA,GAChCA,EAASF,EAAQ,+DDsDHiB,CAA6CT,GEnDtDc,EAASC,yBAETC,EAAcC,YAAgB,CAACP,YXFV,WAA0C,IAAzCrE,EAAwC,uDAAlCQ,EAAoBqE,EAAc,uDAAP,GAE5D,OAAOA,EAAO1D,MACb,IDbiC,sBCgBhC,OAAO2D,OAAOC,OAAO,GAAI/E,EAAO,CAACS,YAAaoE,EAAOnB,UAChD,QACI,OAAO1D,IWN+BsE,SXgB1B,WAAyC,IAAxCtE,EAAuC,uDAAjCU,EAAmBmE,EAAc,uDAAP,GACxD,OAAOA,EAAO1D,MACb,ID3BmC,wBC4BlC,OAAO2D,OAAOC,OAAO,GAAI/E,EAAO,CAACY,WAAW,IAC7C,ID5BmC,wBC6BlC,OAAOkE,OAAOC,OAAO,GAAI/E,EACzB,CACIW,SAAUkE,EAAOnB,QACnB9C,WAAW,IAEd,IDjCkC,uBCkCjC,OAAOkE,OAAOC,OAAO,GAAI/E,EACzB,CACCO,MAAOsE,EAAOnB,QACd9C,WAAW,IAEb,QACC,OAAOZ,MW/BJgF,EAAQC,YAAYN,EAAaO,YAAgBC,IAAiBV,IAIxEW,IAASC,OACR,kBAAC,IAAD,CAAUL,MAAQA,GACjB,kBAAC,EAAD,OACaM,SAASC,eAAe,SbDhC,SAAkBjG,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIiG,IAAIC,iBAAwBzG,OAAOC,SAASyC,MACpDgE,SAAW1G,OAAOC,SAASyG,OAIvC,OAGF1G,OAAO2G,iBAAiB,QAAQ,WAC9B,IAAMtG,EAAK,UAAMoG,iBAAN,sBAEP3G,IAgEV,SAAiCO,EAAOC,GAEtCgE,MAAMjE,EAAO,CACXuG,QAAS,CAAE,iBAAkB,YAE5BlG,MAAK,SAAAmG,GAEJ,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASnD,QACO,MAAfoD,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5CzG,UAAUC,cAAcyG,MAAMvG,MAAK,SAAAC,GACjCA,EAAauG,aAAaxG,MAAK,WAC7BV,OAAOC,SAASkH,eAKpB/G,EAAgBC,EAAOC,MAG1BgB,OAAM,WACLJ,QAAQC,IACN,oEAvFAiG,CAAwB/G,EAAOC,GAI/BC,UAAUC,cAAcyG,MAAMvG,MAAK,WACjCQ,QAAQC,IACN,iHAMJf,EAAgBC,EAAOC,OatB/BE,K","file":"static/js/main.f1c530d7.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// where we keep our constant variables.\r\n\r\nexport const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\r\n\r\n// property state\r\nexport const REQUEST_HOMES_PENDING = 'REQUEST_HOMES_PENDING';\r\nexport const REQUEST_HOMES_SUCCESS = 'REQUEST_HOMES_SUCCESS';\r\nexport const REQUEST_HOMES_FAILED = 'REQUEST_HOMES_FAILED';\r\n","import { \r\n\tCHANGE_SEARCH_FIELD,\r\n\tREQUEST_HOMES_PENDING,\r\n\tREQUEST_HOMES_SUCCESS,\r\n\tREQUEST_HOMES_FAILED \r\n} from './constants';\r\n\r\nconst initialStateSearch = {\r\n\tsearchField:'',\r\n}\r\n\r\n// takes state and the action that occured e.g. on input change\r\nexport const searchHomes = (state=initialStateSearch, action={}) => { // default param arg vals\r\n\t// conditional to check action based on state\r\n\tswitch(action.type) { // type CHANGE_SEARCH_FIELD\r\n\t\tcase CHANGE_SEARCH_FIELD:\r\n\t// assign to new obj the state, then add searchField obj with our input from action\r\n\t// same as below { ...state, { searchField:action.payload } }; \r\n\t\t\treturn Object.assign({}, state, {searchField: action.payload});\r\n        default:\r\n            return state;   // default initialState\r\n\t}\r\n}\r\n\r\nconst initialStateHomes = {\r\n\tproperty:[],\r\n\tisPending: false,\r\n\terror:''\r\n}\r\n\r\nexport const getHomes = (state=initialStateHomes, action={}) => {\r\n\tswitch(action.type) {\r\n\t\tcase REQUEST_HOMES_PENDING:\r\n\t\t\treturn Object.assign({}, state, {isPending: true});\r\n\t\tcase REQUEST_HOMES_SUCCESS:\r\n\t\t\treturn Object.assign({}, state, \r\n\t\t\t{\r\n\t \t  \t\tproperty: action.payload, \r\n\t\t\t \tisPending: false\r\n\t\t\t});\r\n\t\tcase REQUEST_HOMES_FAILED:\r\n\t\t\treturn Object.assign({}, state, \r\n\t\t\t{\r\n\t\t\t\terror: action.payload,\r\n\t\t\t\tisPending: false\r\n\t\t\t});\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n} ","import React from 'react';\r\n\r\n\r\n// props destructure {name,addres...} = props\r\nconst Card = ({features,id,name,area, postcode, type, desc, price, image}) => {\r\n\r\n\treturn (\r\n\t\t\t<div className='card'>\r\n\t\t\t\t<div className='card__house card__house--front'>\r\n\t\t\t\t\t<div className='house__details'>\r\n\t\t\t\t\t<img className='house__img' src={image} alt={`property-${id}, ${name}`}/>\r\n\t\t\t\t\t\t<h2 className='house__name'>{name}</h2>\r\n\t\t\t\t\t\t<p className='house__address'>{`${area}, ${postcode}`}</p>\r\n\t\t\t\t\t\t<p className='house__type'>{type}</p>\r\n\t\t\t\t\t\t<p className='house__price'>\r\n\t\t\t\t\t\t\t<span className='house__price--currency'>£</span>\r\n\t\t\t\t\t\t\t{price}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{/* Flip over and show these details */}\r\n\t\t\t\t\t<div className='card__house card__house--back'>\r\n\t\t\t\t\t\t<div className='house__details'>\r\n\t\t\t\t\t\t\t<p className='house__description'>{desc}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<ul className='house__list'>\r\n\t\t\t\t\t\t\t\t<li className='house__item house__item--emojiBed'>{`${features['bedrooms']} bedrooms`}</li>\r\n\t\t\t\t\t\t\t\t<li className='house__item house__item--emojiCity'>{`${features['city_distance']}mi from city center`}</li>\r\n\t\t\t\t\t\t\t\t<li className='house__item house__item--emojiSchool'>{`${features['school_distance']}mi from local school`}</li>\r\n\t\t\t\t\t\t\t\t<li className='house__item house__item--emojiParking'>{`parking, ${features['parking']}`}</li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t<a className='btn btn__primary' href='#!' target='_blank'>View</a>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t)\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n// {property} = props/property\r\nconst CardList = ({ property }) => {\r\n\t// const cardsArray = \r\n\treturn (\r\n\t\t<div className='card-container'>\r\n\t\t\t{\r\n\t\t\t\tproperty.map(house => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Card \r\n\t\t\t\t\t\t\tkey={ house['id'] } \r\n\t\t\t\t\t\t\tfeatures={ house['house_features'] }  \r\n\t\t\t\t\t\t\tid={ house['id']}  \r\n\t\t\t\t\t\t\tname={ house['house_address'] }  \r\n\t\t\t\t\t\t\tarea={ house['house_area'] }  \r\n\t\t\t\t\t\t\tpostcode={ house['house_postcode'] }  \r\n\t\t\t\t\t\t\ttype={ house['house_type'] }  \r\n\t\t\t\t\t\t\tdesc={ house['house_desc'] }  \r\n\t\t\t\t\t\t\tprice={ house['house_price'] }  \r\n\t\t\t\t\t\t\timage={ house['imageData'] }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n\treturn (\r\n\t\t<div className='search'>\r\n\t\t\t<input onChange={ searchChange } className='search__input tc' type='search' placeholder='search for property type' />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\n\r\nconst Loader = () => {\r\n\treturn (\r\n\t\t<div className='loader'>\r\n\t\t\t<div className='loader__spinner'>\r\n\t\t\t  <div className='loader__spinner loader__spinner--rect1'></div>\r\n\t\t\t  <div className='loader__spinner loader__spinner--rect2'></div>\r\n\t\t\t  <div className='loader__spinner loader__spinner--rect3'></div>\r\n\t\t\t  <div className='loader__spinner loader__spinner--rect4'></div>\r\n\t\t\t  <div className='loader__spinner loader__spinner--rect5'></div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\n\r\n\r\nexport default Loader;","import React from 'react';\r\n\r\n\r\n// children\r\n/*\r\n\t<Parent component>\r\n\t\t<Child component props={object} />\r\n\t</Parent component>\r\n*/\r\n\r\n// scroll uses children to render children of it's children\r\nconst Scroll = (props) => {\r\n\t// console.log(props);\r\n\t// return props.children;\r\n\treturn (\r\n\t\t<div className='scroll'>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Scroll;","import React, { memo } from 'react';\r\n\r\nconst Header = () => {\r\n  console.log({ component: 'HEADER', status: new Date().toLocaleTimeString() });\r\n  return <><h1 className='main-heading tc'>Home Searcher</h1></>\r\n}\r\n\r\nexport default memo(Header);","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\r\n\t// lifeCycle method, similar to try catch\r\n\tcomponentDidCatch(error,info) {\r\n\t\tthis.setState({hasError:true});\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { hasError } = this.state;\r\n\t\tif(hasError) {\r\n\t\t\treturn <h1 className='tc error-msg'>Oops..Something went wrong.</h1>\r\n\t\t}\r\n\t\t// otherwise render ErrorBoundries children\r\n\t\treturn this.props.children;\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundary;","import { \r\n\tREQUEST_HOMES_PENDING,\r\n\tREQUEST_HOMES_SUCCESS,\r\n\tREQUEST_HOMES_FAILED \r\n} from '../redux/constants';\r\n\r\n const apiCall = (url) => dispatch => {\r\n\tdispatch({\r\n\t\ttype: REQUEST_HOMES_PENDING\r\n\t});\r\n \tfetch(url)\r\n \t\t.then(resp=> resp.json())\r\n\t \t.then(data => {\r\n\t\t\tdispatch({\r\n\t \t\t\ttype: REQUEST_HOMES_SUCCESS,\r\n\t \t\t\tpayload:data\r\n\t \t\t});\r\n\t \t}).catch(error => {\r\n\t\t\tdispatch({\r\n\t \t\t\ttype: REQUEST_HOMES_FAILED,\r\n\t \t\t\tpayload:error\r\n\t \t\t});\r\n\t \t});\r\n\t\r\n}\r\n\r\nexport default apiCall;","import React, { Component } from 'react';\r\n\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Loader from '../components/Loader';\r\nimport Scroll from '../components/Scroll';\r\nimport Header from '../components/Header';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\nimport { setSearchField, fetchHomes } from '../redux/actions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = state => { // what state to listen and pass down as prop\r\n\tconst {searchHomes, getHomes} = state;\r\n\treturn {\r\n\t\tsearchField: searchHomes.searchField,\r\n\t\tproperty: getHomes.property,\r\n\t\tisPending: getHomes.isPending,\r\n\t\terror: getHomes.error\r\n\t}\r\n}\r\nconst mapDispatchToProps = (dispatch) => { // what props to listen for and what action to take and dispatch/send\r\n\treturn {\r\n\t\tonSearchChange: (event) => dispatch(setSearchField(event.target.value)),\r\n\t\tonFetchHomes: () => dispatch(fetchHomes())\r\n\t}\r\n}\r\n\r\nclass App extends Component {\r\n\t\r\n\tcomponentDidMount() {\r\n\t\tconst { onFetchHomes } = this.props;\r\n\t\tonFetchHomes();\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { searchField, onSearchChange, property, isPending } = this.props;\r\n\r\n\t\tconst filterPropertyType = property.filter(home => {\r\n\t\t\treturn home['house_type'].toLowerCase().includes(searchField.toLowerCase());\r\n\t\t\t// if property type (lower case) == searchField (lowercase)\r\n\t\t\t// then filter it\r\n\t\t});\r\n\r\n\t\t// console.log(filterPropertyType);\r\n\t\t\r\n\t\t// if property empty show loader else display cards\r\n\t\treturn (isPending) ? \r\n\t\t<Loader/> : \r\n\t\t(\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t\t<Header />\r\n\t\t \t\t\t<SearchBox searchChange={ onSearchChange }/>\r\n\t\t \t\t\t<Scroll>\r\n\t\t \t\t\t\t<ErrorBoundary>\r\n\t\t \t\t\t\t\t<CardList property={ filterPropertyType }/>\r\n\t\t \t\t\t\t</ErrorBoundary>\r\n\t\t \t\t\t</Scroll>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n// export default App;\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n// connect accepts 2 params what state to listen for, what action to take\r\n\r\n// props, passed down from pasrent to child, reads it\r\n// (1/2) state, change/dynamic, description of app, an obj which \r\n// (2/2) describes application\r\n\r\n// Our state would be prop in cardlist and the prop we search for\r\n// Props - what we get from state\r\n// Parent component gives state to child component (recieve as prop)\r\n","import { CHANGE_SEARCH_FIELD } from './constants';\r\nimport apiCall from '../api/api';\r\n\r\nexport const setSearchField = (text) => ({ // return obj\r\n\ttype: CHANGE_SEARCH_FIELD,\r\n\tpayload: text\r\n});\r\n\r\nexport const fetchHomes = () => (dispatch) => {\r\n\tdispatch(apiCall('https://api.jsonbin.io/b/5e66463103d6af389870144e/2'));\r\n}  \r\n// export const getHomes ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"./sass/main.scss\";\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport { createLogger } from 'redux-logger';\r\nimport thunkMiddleWare from \"redux-thunk\";\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { searchHomes, getHomes } from './redux/reducers';\r\nimport App from \"./containers/App\";\r\n\r\n// output actions and payload of state props\r\nconst logger = createLogger();\r\n// combine reducers into 1 root\r\nconst rootReducer = combineReducers({searchHomes, getHomes});\r\n// redux store, passed to container/app\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleWare, logger));\r\n\r\n// export default => import Name from \"./Name\";\r\n// export non-default => import { name } from \"./name\";\r\nReactDOM.render(\r\n\t<Provider store={ store }>\r\n\t\t<App/> \r\n\t</Provider> , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}